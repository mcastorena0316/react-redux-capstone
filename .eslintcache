[{"/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/actions/index.js":"1","/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/components/About.js":"2","/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/components/App.js":"3","/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/components/App.test.js":"4","/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/components/Footer.js":"5","/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/components/Header.js":"6","/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/components/LaunchFilter.js":"7","/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/containers/Mission.js":"8","/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/containers/MissionList.js":"9","/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/index.js":"10","/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/reducers/fetchedReducer.js":"11","/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/reducers/filterReducer.js":"12","/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/reducers/index.js":"13","/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/reducers/missionReducer.js":"14","/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/serviceWorker.js":"15","/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/setupTests.js":"16"},{"size":836,"mtime":1590859740717,"results":"17","hashOfConfig":"18"},{"size":1172,"mtime":1590881396493,"results":"19","hashOfConfig":"18"},{"size":633,"mtime":1590855356454,"results":"20","hashOfConfig":"18"},{"size":280,"mtime":1590684685553,"results":"21","hashOfConfig":"18"},{"size":171,"mtime":1590855140486,"results":"22","hashOfConfig":"18"},{"size":444,"mtime":1590798829444,"results":"23","hashOfConfig":"18"},{"size":1961,"mtime":1590859466141,"results":"24","hashOfConfig":"18"},{"size":4521,"mtime":1590885429160,"results":"25","hashOfConfig":"18"},{"size":3646,"mtime":1590881361035,"results":"26","hashOfConfig":"18"},{"size":812,"mtime":1590685954469,"results":"27","hashOfConfig":"18"},{"size":241,"mtime":1590759296646,"results":"28","hashOfConfig":"18"},{"size":234,"mtime":1590859815073,"results":"29","hashOfConfig":"18"},{"size":298,"mtime":1590769484969,"results":"30","hashOfConfig":"18"},{"size":244,"mtime":1590713733499,"results":"31","hashOfConfig":"18"},{"size":5091,"mtime":1590683597531,"results":"32","hashOfConfig":"18"},{"size":255,"mtime":1590682037003,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11dc0b0",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":3,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/actions/index.js",[],"/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/components/About.js",[],"/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/components/App.js",[],"/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/components/App.test.js",[],"/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/components/Footer.js",[],"/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/components/Header.js",[],"/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/components/LaunchFilter.js",[],"/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/containers/Mission.js",[],"/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/containers/MissionList.js",[],"/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/index.js",[],"/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/reducers/fetchedReducer.js",[],"/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/reducers/filterReducer.js",[],"/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/reducers/index.js",[],"/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/reducers/missionReducer.js",[],"/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/serviceWorker.js",["67","68","69","70","71","72","73","74","75"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/home/mcastorena/Desktop/Microverse/React/react-redux-capstone/src/setupTests.js",[],{"ruleId":"76","severity":2,"message":"77","line":39,"column":9,"nodeType":"78","endLine":39,"endColumn":32},{"ruleId":"79","severity":1,"message":"80","line":44,"column":11,"nodeType":"81","messageId":"82","endLine":44,"endColumn":22},{"ruleId":"76","severity":2,"message":"83","line":51,"column":9,"nodeType":"78","endLine":51,"endColumn":24},{"ruleId":"84","severity":2,"message":"85","line":61,"column":7,"nodeType":"78","endLine":61,"endColumn":19},{"ruleId":"79","severity":1,"message":"80","line":72,"column":15,"nodeType":"81","messageId":"82","endLine":72,"endColumn":26},{"ruleId":"79","severity":1,"message":"80","line":85,"column":15,"nodeType":"81","messageId":"82","endLine":85,"endColumn":26},{"ruleId":"79","severity":1,"message":"80","line":97,"column":7,"nodeType":"81","messageId":"82","endLine":97,"endColumn":20},{"ruleId":"79","severity":1,"message":"80","line":125,"column":7,"nodeType":"81","messageId":"82","endLine":125,"endColumn":18},{"ruleId":"79","severity":1,"message":"80","line":138,"column":9,"nodeType":"81","messageId":"82","endLine":138,"endColumn":22},"no-use-before-define","'checkValidServiceWorker' was used before it was defined.","Identifier","no-console","Unexpected console statement.","MemberExpression","unexpected","'registerValidSW' was used before it was defined.","no-param-reassign","Assignment to property of function parameter 'registration'."]